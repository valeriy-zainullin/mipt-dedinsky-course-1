// #define COMMAND(NAME, NUMBER, ALLOWED_ARG_TYPES...)
// Arg type is 3 bits: uses memory, uses register, uses immediate const.

#include "arg_types.h"

COMMAND(halt, 0, {COMMAND_ARG_NOT_PRESENT})

#if !defined(ARRAY_DEF)
#define ARRAY_DEF(...) { __VA_ARGS__ }
#endif

COMMAND(
	push,
	1,
	ARRAY_DEF(
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_REGISTER | COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_REGISTER,
		COMMAND_ARG_USES_REGISTER | COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_REGISTER
	)
)

COMMAND(
	pop,
	2,
	ARRAY_DEF(
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_REGISTER | COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_IMMEDIATE_CONST,
		COMMAND_ARG_USES_MEMORY | COMMAND_ARG_USES_REGISTER,
		COMMAND_ARG_USES_REGISTER
	)
)

COMMAND(add, 3, {COMMAND_ARG_NOT_PRESENT})
COMMAND(sub, 4, {COMMAND_ARG_NOT_PRESENT})
COMMAND(mul, 5, {COMMAND_ARG_NOT_PRESENT})
COMMAND(div, 6, {COMMAND_ARG_NOT_PRESENT})

COMMAND(shr, 7, {COMMAND_ARG_NOT_PRESENT})
COMMAND(shl, 8, {COMMAND_ARG_NOT_PRESENT})
COMMAND(and, 9, {COMMAND_ARG_NOT_PRESENT})
COMMAND(or, 10, {COMMAND_ARG_NOT_PRESENT})
COMMAND(xor, 11, {COMMAND_ARG_NOT_PRESENT})

COMMAND(out, 12, {COMMAND_ARG_NOT_PRESENT})